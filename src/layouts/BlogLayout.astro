---
import type { CollectionEntry } from "astro:content";

import AppLayout from "./BaseLayout.astro";
import Pagination from "../components/Pagination.astro";
import { Image } from "astro:assets";
import authorImage from "../assets/images/me.jpeg";
import { name, github } from "../data/socials";
import Icon from "astro-icon";

interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const { title, description, hero, heroAlt, pubDate, updatedDate } = post.data;

const url = post.slug;

const { Content } = await post.render();

const ogImage = {
  src: `/image/${url}.png`,
  alt: title,
};

const fullPubDate = pubDate.toLocaleDateString("en", {
  dateStyle: "full",
});

const fullUpdatedDate = updatedDate?.toLocaleDateString("en", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const shareData = JSON.stringify({
  url: new URL(Astro.url).href,
  title,
  text: description,
});
---

<AppLayout
  title={title}
  description={description}
  ogImage={ogImage}
  pubDate={updatedDate ?? pubDate}
>
  <header class="flex flex-col mb-8">
    <button
      onclick="
      history.back();
"
      class="flex items-center dark:text-teal-400 text-blue-600 font-bold text-center"
    >
      <Icon name="ph:arrow-left" class="w-6 h-6" />
       Go Back
    </button>
    <time
      datetime={pubDate.toISOString()}
      class="block text-center dark:text-zinc-400 text-zinc-600 mb-4 text-sm sm:text-base"
      transition:name={pubDate.toISOString()}
    >
      {fullPubDate}
    </time>
    <h1
      id="title"
      class="flex items-center justify-center gap-3 text-2xl sm:text-4xl pb-8 font-bold text-center text-transparent bg-clip-text bg-gradient-to-r from-teal-500 via-blue-500 to-purple-500"
      transition:name={title}
      data-share={shareData}
    >
      {title}
    </h1>
    <div class="inline-flex gap-2 justify-center items-center mb-8">
      <div class="aspect-square rounded-full overflow-hidden">
        <Image
          src={authorImage}
          alt="Image of the author"
          loading="eager"
          class="aspect-square w-10"
          width={80}
          height={80}
        />
      </div>
      <p class="dark:text-zinc-400 text-zinc-700 text-sm">
        <span class="block font-semibold">{name}</span>
        <a
          class="dark:text-blue-400 text-blue-600 hover:underline block"
          href="https://github.com/vitalics"
          target="_blank"
          rel="noopener noreferrer"
          >{github}
        </a>
      </p>
    </div>
    <Image
      src={hero}
      alt={heroAlt ?? "hero image"}
      loading="eager"
      class="rounded-lg"
      width={1200}
      height={630}
    />
  </header>
  {
    updatedDate && (
      <article class="dark:text-blue-300 py-2 px-4 mb-6 rounded-md text-sm sm:text-base border border-blue-400 transition-all bg-blue-600/20">
        <span class="font-semibold">Last updated: </span>
        {fullUpdatedDate}
      </article>
    )
  }
  <article
    class="prose dark:prose-invert lg:prose-lg dark:prose-code:text-zinc-300 dark:prose-a:text-blue-400 prose-a:text-blue-600 max-w-none hover:prose-a:underline focus:prose-a:underline prose-a:no-underline dark:prose-headings:text-teal-500 prose-img:rounded-lg"
  >
    <Content />
  </article>
  <Pagination />
</AppLayout>
<script>
  const shareSupported =
    navigator.share && typeof navigator.share === "function";

  const title = document.querySelector("h1#title")!;

  if (shareSupported) {
    const button$ = document.createElement("button");
    button$.id = "share-icon";
    button$.innerHTML = `<svg viewBox="0 0 512 512" class="w-12 dark:text-zinc-400 text-zinc-600" astro-icon="ion:share-outline"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M336 192h40a40 40 0 0 1 40 40v192a40 40 0 0 1-40 40H136a40 40 0 0 1-40-40V232a40 40 0 0 1 40-40h40M336 128l-80-80-80 80M256 321V48"></path></svg>`;
    title.appendChild(button$);

    async function share() {
      const parsedData = JSON.parse((title as any).dataset.share);

      try {
        await navigator.share(parsedData);
        console.log("shared successfully!");
      } catch (err) {
        console.error(`Error: ${err}`);
      }
    }
    button$.addEventListener("click", share);
  }
</script>
