---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {
  disabled?: boolean;
}
const { href, disabled, ...props } = Astro.props;
let isActive: boolean;

if (!href) {
  isActive = false;
} else if (href === "/") {
  isActive = href === Astro.url.pathname;
} else {
  isActive = Astro.url.pathname.includes(
    typeof href === "string" ? href : href.href
  );
}
---

<span class:list={[{ "cursor-not-allowed": disabled }]}>
  <a
    data-disabled={disabled}
    data-active={isActive}
    class:list={[
      "font-semibold text-sm block py-2.5 px-3 dark:hover:bg-zinc-700/50 hover:bg-zinc-100",
      { "dark:text-zinc-200 text-zinc-600": !isActive },
      { "dark:text-teal-400 text-blue-600": isActive },
      {
        "pointer-events-none opacity-50": disabled,
      },
    ]}
    aria-disabled={disabled}
    aria-current={isActive ? "page" : undefined}
    href={href}
    {...props}
  >
    <slot />
  </a>
</span>
<style>
  a[aria-disabled="true"] {
    pointer-events: none;
    text-decoration: none;
    cursor: not-allowed;
  }
</style>
